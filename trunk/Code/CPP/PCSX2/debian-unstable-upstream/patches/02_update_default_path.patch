Debian policy.
This patch updates default plugin path and config path.
It also updates the pcsx2 game db path and shaders data path.
AppInit.cpp:93 could be probably updated
Index: pcsx2.snapshot-3369/pcsx2/gui/AppConfig.cpp
===================================================================
--- pcsx2.snapshot-3369.orig/pcsx2/gui/AppConfig.cpp
+++ pcsx2.snapshot-3369/pcsx2/gui/AppConfig.cpp
@@ -162,7 +162,8 @@
 
 	wxDirName GetPlugins()
 	{
-		return AppRoot() + Base::Plugins();
+		// return AppRoot() + Base::Plugins();
+		return wxDirName( L"/usr/lib/games/pcsx2" ) + Base::Plugins();
 	}
 
 	wxDirName GetSettings()
Index: pcsx2.snapshot-3369/plugins/zzogl-pg/opengl/ZZoglCreate.cpp
===================================================================
--- pcsx2.snapshot-3369.orig/plugins/zzogl-pg/opengl/ZZoglCreate.cpp
+++ pcsx2.snapshot-3369/plugins/zzogl-pg/opengl/ZZoglCreate.cpp
@@ -347,17 +347,12 @@
 	assert(hShaderGlob != NULL);
 	s_lpShaderResources = (u8*)LockResource(hShaderGlob);
 #	else // not _WIN32
-	FILE* fres = fopen("ps2hw.dat", "rb");
+	FILE* fres = fopen("/usr/share/games/pcsx2/shaders/ps2hw.dat", "rb");
 
 	if (fres == NULL)
 	{
-		fres = fopen("plugins/ps2hw.dat", "rb");
-
-		if (fres == NULL)
-		{
-			ZZLog::Error_Log("Cannot find ps2hw.dat in working directory. Exiting.");
-			return false;
-		}
+        ZZLog::Error_Log("Cannot find ps2hw.dat in working directory. Exiting.");
+        return false;
 	}
 
 	fseek(fres, 0, SEEK_END);
Index: pcsx2.snapshot-3369/pcsx2/gui/AppGameDatabase.h
===================================================================
--- pcsx2.snapshot-3369.orig/pcsx2/gui/AppGameDatabase.h
+++ pcsx2.snapshot-3369/pcsx2/gui/AppGameDatabase.h
@@ -51,8 +51,8 @@
 		Console.WriteLn( "(GameDB) Unloading..." );
 	}
 
-	AppGameDatabase& LoadFromFile(const wxString& file = L"GameIndex.dbf", const wxString& key = L"Serial" );
-	void SaveToFile(const wxString& file = L"GameIndex.dbf");
+	AppGameDatabase& LoadFromFile(const wxString& file = L"/var/games/pcsx2/GameIndex.dbf", const wxString& key = L"Serial" );
+	void SaveToFile(const wxString& file = L"/var/games/pcsx2/GameIndex.dbf");
 };
 
 static wxString compatToStringWX(int compat) {
