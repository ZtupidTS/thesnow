# -*- python -*-

Import('env')
import os
import sys

def createVersion(env, target, source):
	from SconsTests import utils
	utils.GenerateRevFile(env['flavor'], source[0].path, target[0].path)

env.Command('svnrev.h', 'svnrev_template.h',
	[Delete('${TARGET.srcpath}'), createVersion])

files = [
	"ABI.cpp",
	"BreakPoints.cpp",
	"CDUtils.cpp",
	"ColorUtil.cpp",
	"ConsoleListener.cpp",
	"CPUDetect.cpp",
	"DynamicLibrary.cpp",
	"FileSearch.cpp",
	"FileUtil.cpp",
	"Hash.cpp",
	"IniFile.cpp",
	"LogManager.cpp",
	"MathUtil.cpp",
	"MemArena.cpp",
	"MemoryUtil.cpp",
	"Misc.cpp",
	"MsgHandler.cpp",
	"NandPaths.cpp",
	"OpenCL.cpp",
	"Plugin.cpp",
	"PluginDSP.cpp",
	"PluginVideo.cpp",
	"SDCardUtil.cpp",
	"StringUtil.cpp",
	"SymbolDB.cpp",
	"SysConf.cpp",
	"Thread.cpp",
	"Thunk.cpp",
	"Timer.cpp",
	"Thread.cpp",
	"Version.cpp",
	"x64Emitter.cpp",
	"x64Analyzer.cpp",
	"Crypto/aes_cbc.cpp",
	"Crypto/aes_core.cpp",
	"Crypto/bn.cpp",
	"Crypto/ec.cpp",
	"Crypto/md5.cpp",
	"Crypto/sha1.cpp",
	]

if sys.platform == 'win32':
	files += [ "ExtendedTrace.cpp" ]
	files += [ "stdafx.cpp" ]

env.StaticLibrary(env['local_libs'] + "common", files)
env['CPPPATH'] += ['.']
