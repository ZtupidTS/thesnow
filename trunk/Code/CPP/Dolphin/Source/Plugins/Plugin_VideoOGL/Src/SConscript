# -*- python -*-

Import('env')
# can we import path in one place?
import sys
sys.path.append(env['base_dir']+'SconsTests')
import utils
import platform

name = "Plugin_VideoOGL"

files = [
	'BPFunctions.cpp',
	'DLCache.cpp',
	'RasterFont.cpp',
	'Render.cpp',
	'TextureMngr.cpp',
	'NativeVertexFormat.cpp',
	'PixelShaderCache.cpp',
	'VertexShaderCache.cpp',
	'TextureConverter.cpp',
	'VertexManager.cpp',
	'VertexLoaderManager.cpp',
	'XFB.cpp',
	'PostProcessing.cpp',
	'FramebufferManager.cpp',
	]
linkFlags = [
	]
libs = [
	'videocommon', 'GLEW', 'SDL', 'SOIL', 'common'
	]

gfxenv = env.Clone()

files += [
	'main.cpp',
	'GLUtil.cpp',
	]
if sys.platform != 'darwin':
	if gfxenv['HAVE_OPENCL']:
		libs += [ 'OpenCL']
if gfxenv['HAVE_WX']:
	files += [
                'GUI/ConfigDlg.cpp',
		'Debugger/Debugger.cpp',
                ]

if sys.platform == 'darwin':
        files += [ 'cocoaGL.m' ]

if sys.platform == 'win32':
        files += [ 'OS/Win32.cpp' ]

if sys.platform == 'win32':
	files += [
		'OS/Win32.cpp'
		]
	libs += [
		env['base_dir'] + '/Externals/Cg/'
		]	
	gfxenv['CPPPATH'] += libs

# Sanity check
if gfxenv['USE_WX'] and not gfxenv['HAVE_WX']:
    print "Must have wx to use wxgl"
    Return()

gfxenv.SharedLibrary(
	env['plugin_dir']+name,
	files,
	LIBS =  libs + gfxenv['LIBS']
	)
