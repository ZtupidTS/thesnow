# SciTE 中文版 全局语法缩写文件
# 请把这个文件放置于%appdata%文件夹下面(在运行中输入%appdata%) 
# 添加例子: 缩写=完整单词   W=WWW.AUTOIT.NET.CN|
# 在SCITE输入缩写后按下CTRL+B就展开缩写.
# '|' 可以理解为展开缩写后光标所在的位置.
# \n 代表换行.\t代表TAB制表符.具体表达式可以参考C++语言(如果有兴趣)
# 最后修改于 09/06/04 日,杭州,thesnoW.

#- ' A U T O I T  缩写文件(不完全)' -#

#region - ctrl+b
[设置]
#; -- Files -- (use ctrl+b for this group)
au3check=C:\\Program Files\\Autoit3\\Au3Check.exe|
autoit3=C:\\Program Files\\Autoit3\\AutoIt3.exe|
aut2exe=C:\\Program Files\\AutoIt3\\Aut2Exe\\Aut2Exe.exe|
datbeta=C:\\Program Files\\AutoIt3\\Beta\\au3check.dat|
datfinal=C:\\Program Files\\AutoIt3\\au3check.dat|
icon=C:\\Program Files\\AutoIt3\\Aut2Exe\\Icons\\|.ico
scite=C:\\Program Files\\Autoit3\\SciTe\\SciTe.exe|

#; -- Directories -- (use ctrl+b for this group)
autoit3dir=C:\\Program Files\\AutoIt3\\|
aut2exedir=C:\\Program Files\\AutoIt3\\Aut2Exe\\|
icondir=C:\\Program Files\\AutoIt3\\Aut2Exe\\Icons\\|
includedir=C:\\Program Files\\AutoIt3\\Include\\|
scitedir=C:\\Program Files\\Autoit3\\SciTe\\|

#; -- Abbreviate strings --
HKEY_CLASSES_ROOT=HKCR
HKEY_CURRENT_USER=HKCU
HKEY_LOCAL_MACHINE=HKLM
HKEY_USERS=HKU
HKEY_CURRENT_CONFIG=HKCC

#endregion - ctrl+b

#; -- Gui Variables --
but=$button_|
chk=$checkbox_|
edt=$edit_|
inp=$input_|
lbl=$label_|
rad=$radio_|
tab=$tab_|

#; -- Tray Variables --
item=$item_|

#; -- Misc Variables --
hnd=$handle_|
regkey=$registry_Key
regval=$registry_Value
regdat=$registry_Data
error=$error |
result=$result |

#; -- Constant GUICtrlRead --
gchecked=$GUI_CHECKED|
gunchecked=$GUI_UNCHECKED|

#; -- Constant GUICtrlState --
genable=$GUI_ENABLE|
gdisable=$GUI_DISABLE|
ghide=$GUI_HIDE|
gshow=$GUI_SHOW|
gfocus=$GUI_FOCUS|

#; -- Events and messages --
eclose=$GUI_EVENT_CLOSE|
emin=$GUI_EVENT_MINIMIZE|
erestore=$GUI_EVENT_RESTORE|
emax=$GUI_EVENT_MAXIMIZE|

#; -- PreSelected Commands --
cmd=RunWait('"' & @ComSpec & '" /c |', '', @SW_HIDE)\n
cmd2=RunWait('"' & @ComSpec & '" /c ' & |, '', @SW_HIDE)\n
mb2=MsgBox(0, '', |)
slp1=Sleep(1000)\n|
slp2=Sleep(2000)\n|
slp3=Sleep(3000)\n|
slp4=Sleep(4000)\n|
slp5=Sleep(5000)\n|

#; -- GUI Common Prefixes to Functions --
gcc=GUICtrlCreate|
gcs=GUICtrlSet|

#; -- Macro's --
cr1=& @CRLF |
cr2=& @CRLF & @CRLF |
cr3=& @CRLF & @CRLF & @CRLF |
cr4=& @CRLF & @CRLF & @CRLF & @CRLF |
cr5=& @CRLF & @CRLF & @CRLF & @CRLF & @CRLF |
tab1=& @TAB |
tab2=& @TAB & @TAB |
tab3=& @TAB & @TAB & @TAB |
tab4=& @TAB & @TAB & @TAB & @TAB |
tab5=& @TAB & @TAB & @TAB & @TAB & @TAB |
lf1=& @LF |
lf2=& @LF & @LF |
lf3=& @LF & @LF & @LF |
lf4=& @LF & @LF & @LF & @LF |
lf5=& @LF & @LF & @LF & @LF & @LF |

#; -- Keywords --
cc=ContinueCase|
cl=ContinueLoop|
el=ExitLoop|
err=@error |
ext=@extended |

#; -- Directives --
include=#include <GUIConstants.au3>\n|
includeonce=#include-once\n|
reg=#region - |\n
ereg=#endregion\n|
nti=#NoTrayIcon\n|

#; -- Multiline Structures --
ifthen=If | Then\nEndIf
ifelse=If | Then\nElse\nEndIf
ifelseif=If | Then\nElseIf \nElse\nEndIf
dountil=Do\n\t|\nUntil
fornext=For $i = | To  Step 1\nNext
fun=Func _|()\nEndFunc
selectcase=Select\n\tCase |\n\tCase \n\tCase \n\tCase \n\tCase Else \nEndSelect\n
switchcase=Switch |\n\tCase \n\tCase \n\tCase \n\tCase \n\tCase Else \nEndSwitch\n
more=|\nCase \nCase \nCase \nCase \nCase Else
whilewend=While |\nWEnd
withendwith=With |\nEndWith

#; -- Start of Structures --
for0=For $i = 0 To |
for0ub=For $i = 0 To UBound(|) -1
for1=For $i = 1 To |
for1ub=For $i = 1 To UBound(|) -1

#; -- Setup GUI --
setupgui=#include <GUIConstants.au3>\n\n#region - GUI Create\nGUICreate('|')\nGUISetState()\n#endregion\n\n#region - GUI SelectLoop\nWhile 1\n\t$msg = GUIGetMsg()\n\tSelect\n\t\tCase $msg = $GUI_EVENT_CLOSE\n\t\t\tExit\n\t\tCase $msg = \n\t\tCase $msg = \n\t\tCase $msg = \n\t\tCase $msg = \n\tEndSelect\nWEnd\n#endregion\n
selectloop=#region - GUI SelectLoop\nWhile 1\n\t$msg = GUIGetMsg()\n\tSelect\n\t\tCase $msg = $GUI_EVENT_CLOSE\n\t\t\tExit\n\t\tCase $msg = |\n\t\tCase $msg = \n\t\tCase $msg = \n\t\tCase $msg = \n\tEndSelect\nWEnd\n#endregion\n
switchloop=#region - GUI SwitchLoop\nWhile True\n\tSwitch GUIGetMsg()\n\t\tCase $GUI_EVENT_EXIT\n\t\t\tExit\n\t\tCase |\n\t\tCase \n\t\tCase \n\t\tCase Else \n\tEndSwitch\nWEnd\n#endregion\n
moremsg=|\nCase $msg = \t\nCase $msg = \nCase $msg = \nCase $msg = \nCase $msg =
functions=; Start - Functions\n\nFunc _|A()\nEndFunc\n\nFunc _B()\nEndFunc\n\nFunc _C()\nEndFunc\n\nFunc _D()\nEndFunc\n\nFunc _E()\nEndFunc\n\nFunc _F()\nEndFunc\n\nFunc _G()\nEndFunc\n\nFunc _H()\nEndFunc\n\nFunc _I()\nEndFunc\n\nFunc _J()\nEndFunc

#; -- Special functions --
say=Func _Say($sText, $iRate = 1, $iVolume = 100)\n\tIf $iRate > 10 Or $iVolume > 100 Then Return\n\tLocal $oTalk = ObjCreate('SAPI.SpVoice')\n\tIf Not @error Then\n\t\t$oTalk.Rate = $iRate\n\t\t$oTalk.Volume = $iVolume\n\t\t$oTalk.Speak($sText)\n\tEndIf\nEndFunc\n
selfdelete=Func _SelfDelete($iDelay = 0)\n\tLocal $sCmdFile\n\tFileDelete(@TempDir & "\scratch.bat")\n\t$sCmdFile = 'ping -n ' & $iDelay & '127.0.0.1 > nul' & @CRLF _\n\t\t\t& ':loop' & @CRLF _\n\t\t\t& 'del "' & @ScriptFullPath & '" > nul' & @CRLF _\n\t\t\t& 'if exist "' & @ScriptFullPath & '" goto loop' & @CRLF _\n\t\t\t& 'del ' & @TempDir & '\scratch.bat'\n\tFileWrite(@TempDir & "\scratch.bat", $sCmdFile)\n\tRun(@TempDir & "\scratch.bat", @TempDir, @SW_HIDE)\nEndFunc\n

#; -- AutoIt3Wrapper Directives + Options --
a3w=#Region AutoIt3Wrapper directives section\n;** This is a list of compiler directives used by AutoIt3Wrapper.exe.\n;** comment the lines you don't need or else it will override the default settings\n;===============================================================================================================\n;** AUTOIT3 settings\n#AutoIt3Wrapper_AUTOIT3=                        ;Override the default Interpreter version.\n#AutoIt3Wrapper_Run_Debug_Mode=n                ;Run Script with console debugging \n;===============================================================================================================\n;** AUT2EXE settings\n#AutoIt3Wrapper_AUT2EXE=                        ;Override the default compiler with this version.\n#AutoIt3Wrapper_UseAnsi=                        ;(y/n) Use Ansi versions for AutoIt3a or AUT2EXEa. Default is n\n#AutoIt3Wrapper_Icon=                           ;Filename of the Ico file to use\n#AutoIt3Wrapper_OutFile=                        ;Target exe/a3x filename.\n#AutoIt3Wrapper_OutFile_Type=exe                ;a3x=small AutoIt3 file;  exe=Standalone executable(Default)\n#AutoIt3Wrapper_Compression=2                   ;Compression parameter 0-4  0=Low 2=normal 4=High\n#AutoIt3Wrapper_Allow_Decompile=y               ;y= allow decompile\n#AutoIt3Wrapper_PassPhrase=                     ;Password to use for compilation\n#AutoIt3Wrapper_UseUpx=y                        ;(y/n) Compress output program works only for 3.1.1.110 and up. Default=Y\n;===============================================================================================================\n;** Target program Resource info\n#AutoIt3Wrapper_Res_Comment=                    ;Comment field\n#AutoIt3Wrapper_Res_Description=                ;Description field\n#AutoIt3Wrapper_Res_Fileversion=                ;File Version\n#AutoIt3Wrapper_Res_FileVersion_AutoIncrement=y ;AutoIncrement FileVersion After Aut2EXE is finished.\n;#AutoIt3Wrapper_Res_Language=2057              ;Resource Language code . default 2057=English (United Kingdom)\n#AutoIt3Wrapper_Res_LegalCopyright=             ;Copyright field\n; free form resource fields ... max 15\n; you can use the following variables:\n; %AutoItVer% which will be replaced with the version of AutoIt3\n; %date% = PC date in short date format\n; %longdate% = PC date in long date format\n; %time% = PC timeformat\n#AutoIt3Wrapper_Res_Field=AutoIt Version|%AutoItVer%\n#AutoIt3Wrapper_Res_Field=Name|Value            ;Free format fieldname|fieldvalue\n#AutoIt3Wrapper_Res_Field=Name|Value            ;Free format fieldname|fieldvalue\n#AutoIt3Wrapper_Res_Field=Name|Value            ;Free format fieldname|fieldvalue\n#AutoIt3Wrapper_Res_Field=Name|Value            ;Free format fieldname|fieldvalue\n;Add extra ICO files to the resources which can be used with TraySetIcon(@ScriptFullPath, 3) etc\n;#AutoIt3Wrapper_Res_Icon_Add=C:\Program Files\AutoIt3\Icons\filetype2.ico           ;filename of the Ico file to be added, First one will have number 3, then 4 ..etc\n;#AutoIt3Wrapper_Res_Icon_Add=C:\Program Files\AutoIt3\Icons\filetype3.ico           ;filename of the Ico file to be added, First one will have number 3, then 4 ..etc\n;===============================================================================================================\n; Tidy Settings\n#AutoIt3Wrapper_Run_Tidy=n                      ;Run Tidy before compilation. default=y\n#AutoIt3Wrapper_Tidy_Stop_OnError=y             ;Continue when only Warnings. default=y\n#Tidy_Parameters=                               ;Tidy Parameters...see SciTE4AutoIt3 Helpfile for options \n;===============================================================================================================\n; Obfusticator\n#AutoIt3Wrapper_Run_Obfuscator=y                ;Run Obfuscator before compilation. default=n\n#obfuscator_parameters\n;===============================================================================================================\n; AU3CHECK settings\n#AutoIt3Wrapper_Run_AU3Check=                   ;(Y/N) Run au3check before compilation. De
fault=Y\n#AutoIt3Wrapper_AU3Check_Parameters=            ;Au3Check parameters\n#AutoIt3Wrapper_AU3Check_Dat=                   ;Override the default au3check definition\n#AutoIt3Wrapper_AU3Check_Stop_OnWarning=        ;(Y/N) N=Continue on Warnings.(Default) Y=Always stop on Warnings #AutoIt3Wrapper_AU3Check_Parameters=            ;Au3Check parameters\n#AutoIt3Wrapper_PlugIn_Funcs=                   ;Define PlugIn function names separated by a Comma to avoid AU3Check errors\n;===============================================================================================================\n; RUN BEFORE AND AFTER definitions\n; The following directives can contain:\n;   %in% , %out%, %icon% which will be replaced by the fullpath\filename.\n;   %scriptdir% same as @ScriptDir and %scriptfile% = filename without extension.\n;   %fileversion% is the information from the #AutoIt3Wrapper_Res_Fileversion directive\n;   %scitedir% will be replaced by the SciTE program directory\n#AutoIt3Wrapper_Run_Before=                     ;process to run before compilation - you can have multiple records that will be processed in sequence\n#AutoIt3Wrapper_Run_After=                      ;process to run After compilation - you can have multiple records that will be processed in sequence\n#AutoIt3Wrapper_Run_cvsWrapper=y                ;(y/n) Run cvsWrapper to update the script source. Default=n\n#EndRegion\n
a3w2=#Region AutoIt3Wrapper directives section\n;** AUTOIT3 settings\n#AutoIt3Wrapper_AUTOIT3=\n#AutoIt3Wrapper_Run_Debug_Mode=n\n;** AUT2EXE settings\n#AutoIt3Wrapper_AUT2EXE=\n#AutoIt3Wrapper_UseAnsi=\n#AutoIt3Wrapper_Icon=\n#AutoIt3Wrapper_OutFile=\n#AutoIt3Wrapper_OutFile_Type=exe\n#AutoIt3Wrapper_Compression=2\n#AutoIt3Wrapper_Allow_Decompile=y\n#AutoIt3Wrapper_PassPhrase=\n#AutoIt3Wrapper_UseUpx=y\n;** Target program Resource info\n#AutoIt3Wrapper_Res_Comment=\n#AutoIt3Wrapper_Res_Description=\n#AutoIt3Wrapper_Res_Fileversion=\n#AutoIt3Wrapper_Res_FileVersion_AutoIncrement=y\n;#AutoIt3Wrapper_Res_Language=2057\n#AutoIt3Wrapper_Res_LegalCopyright=\n#AutoIt3Wrapper_Res_Field=AutoIt Version|%AutoItVer%\n#AutoIt3Wrapper_Res_Field=Name|Value\n#AutoIt3Wrapper_Res_Field=Name|Value\n#AutoIt3Wrapper_Res_Field=Name|Value\n#AutoIt3Wrapper_Res_Field=Name|Value\n;#AutoIt3Wrapper_Res_Icon_Add=C:\Program Files\AutoIt3\Icons\filetype2.ico\n;#AutoIt3Wrapper_Res_Icon_Add=C:\Program Files\AutoIt3\Icons\filetype3.ico\n; Tidy Settings\n#AutoIt3Wrapper_Run_Tidy=n\n#AutoIt3Wrapper_Tidy_Stop_OnError=y\n#Tidy_Parameters=\n; Obfusticator\n#AutoIt3Wrapper_Run_Obfuscator=y\n#obfuscator_parameters\n; AU3CHECK settings\n#AutoIt3Wrapper_Run_AU3Check=\n#AutoIt3Wrapper_AU3Check_Parameters=\n#AutoIt3Wrapper_AU3Check_Dat=\n#AutoIt3Wrapper_AU3Check_Stop_OnWarning=\n#AutoIt3Wrapper_PlugIn_Funcs=\n; RUN BEFORE AND AFTER definitions\n#AutoIt3Wrapper_Run_Before=\n#AutoIt3Wrapper_Run_After=\n#AutoIt3Wrapper_Run_cvsWrapper=y\n#EndRegion\n
options=#region - Options|\n;~ Opt('CaretCoordMode', 0)\t\t\t\t; 1 = Absolute screen coordinates, 0 = Relative coords to the active window.\n;~ Opt('ColorMode', 1)\t\t\t\t\t; 0 = Colors are defined as RGB (0xRRGGBB), 1 = Colors are defined as BGR (0xBBGGRR).\n;~ Opt('ExpandEnvStrings', 1)\t\t\t; 0 = Don't expand, 1 = Do expand (Use %dos% variables in strings).\n;~ Opt('ExpandVarStrings', 1)\t\t\t; 0 = Don't expand, 1 = Do expand (Use $autoit$ variables in strings).\n;~ Opt('FtpBinaryMode', 0)\t\t\t\t; 1 = Binary transfer, 0 = ASCII transfer.\n;~ Opt('GUICloseOnESC', 0)\t\t\t\t; 1 = Send the $GUI_EVENT_CLOSE message when ESC is pressed (default).\n; \t\t\t\t\t\t\t\t\t\t  0 = Don't send the $GUI_EVENT_CLOSE message when ESC is pressed.\n;~ Opt('GUICoordMode', 2)\t\t\t\t; 1 = Absolute coordinates still relative to the dialog box.\n; \t\t\t\t\t\t\t\t\t\t  0 = Relative position to the start of the last control (Upper left corner).\n; \t\t\t\t\t\t\t\t\t\t  2 = Cell positionining relative to current cell.\n;~ Opt('GUIDataSeparatorChar', '')\t\t; ''  Define the character which delimits subitems in GUICtrlSetData. The default character is '|'.\n;~ Opt('GUIEventOptions', 1)\t\t\t; 0 = Windows behavior on click on Minimize, Restore and Maximize.\n;\t\t\t\t\t\t\t\t\t\t  1 = Suppress windows behavior on minimize, restore or Maximize. Just send notification.\n;\t\t\t\t\t\t\t\t\t\t  2 = GUICtrlRead of a tab control return ControlID instead of index of the Tab.\n;\t\t\t\t\t\t\t\t\t\t  3 = Combined mode of 1 & 2.\n;~ Opt('GUIOnEventMode', 1)\t\t\t\t; 0 = Disable, 1 = Enable.\n;~ Opt('GUIResizeMode', 1)\t\t\t\t; 0 = No resizing, <1024 = Anytype of resizing (Reference: GuiCtrlSetResizing).\n;~ Opt('MouseClickDelay', 10)\t\t\t; ? = 10 milliseconds by default.\n;~ Opt('MouseClickDownDelay', 10)\t\t; ? = 10 milliseconds by default.\n;~ Opt('MouseClickDragDelay', 250)\t\t; ? = 250 milliseconds by default.\n;~ Opt('MouseCoordMode', 0)\t\t\t\t; 1 = Absolute, 0 = Relative to active window, 2 = Relative to client area.\n;~ Opt('MustDeclareVars', 1)\t\t\t; 0 = No, 1 = Require pre-declare.\n;~ Opt('OnExitFunc', '')\t\t\t\t; ''  Sets the name of the function called when AutoIt exits (Default is OnAutoItExit).\n;~ Opt('PixelCoordMode', 0)\t\t\t\t; 1 = Absolute, 0 = relative, 2 = Relative coords to the client area.\n;~ Opt('RunErrorsFatal', 0)\t\t\t\t; 1 = Fatal, 0 = Silent set @error.\n;~ Opt('SendAttachMode', 1)\t\t\t\t; 0 = Don't attach, 1 = Attach.\n;~ Opt('SendCapslockMode', 0)\t\t\t; 1 = Store and restore, 0 = Don't store / restore.\n;~ Opt('SendKeyDelay', 5)\t\t\t\t; ? = 5 milliseconds by default.\n;~ Opt('SendKeyDownDelay', 1)\t\t\t; ? = 1 millisecond by default.\n;~ Opt('TCPTimeout', 100)\t\t\t\t; ? = 100 milliseconds by default.\n;~ Opt('TrayAutoPause', 0)\t\t\t\t; 1 = AutoPausing is On, 0 = AutoPausing is Off.\n;~ Opt('TrayIconDebug', 1)\t\t\t\t; 0 = No info, 1 = Debug line info.\n;~ Opt('TrayIconHide', 1)\t\t\t\t; 0 = Show, 1 = Hide.\n;~ Opt('TrayMenuMode', 1)\t\t\t\t; 0 = Default menu items (Script Paused / Exit) are appended to the user created menu,\n;\t\t\t\t\t\t\t\t\t\t\tuser created checked items will automatically unchecked, if you double click the tray\n;\t\t\t\t\t\t\t\t\t\t\ticon then the controlid is returned which has the "Default"-style.\n;\t\t\t\t\t\t\t\t\t\t  1 = No default menu.\n;\t\t\t\t\t\t\t\t\t\t  2 = User created checked items will not automatically unchecked if you click it.\n;\t\t\t\t\t\t\t\t\t\t  4 = Don't return the menuitemID which has the "default"-style in\n;\t\t\t\t\t\t\t\t\t\t\tthe main contextmenu if you double click the tray icon.\n;~ Opt('TrayOnEventMode', 1)\t\t\t; 0 = disable, 1 = enable.\n;~ Opt('WinDetectHiddenText', 1)\t\t; 0 = Don't detect, 1=Do detect.\n;~ Opt('WinSearchChildren', 1)\t\t\t; 0 = No, 1 = Search children also.\n;~ Opt('WinTextMatchMode', 4)\t\t\t; 1 = Complete / Slow mode, 2 = Quick mode.\n;~ Opt('WinTitleMatchMode', 4)\t\t\t; 1 = Start, 2 = SubString, 3 = Exact, 4 = ...\n;~ Opt('WinWaitDelay', 250)\t\t\t\t; ? = 250 milliseconds by default.\n#endregion\n

#; -- Templates --
setupudf=;===============================================================================\n;\n; Function Name:   |\n; Description::    \n; Parameter(s):    \n; Requirement(s):  \n; Return Value(s): \n; Author(s):       \n;\n;===============================================================================\n;\n

#; -- Commandline Variables, CmdlineSelect and CmdlineSwitch --
cmdline=$CMDLINE[|]
cmdlineselect=#region - CmdlineSelect\nIf $CMDLINE[0] Then\n\tFor $i = 1 To $CMDLINE[0]\n\t\tSelect\n\t\t\tCase $CMDLINE[$i] = '/?'\n\t\t\t\tMsgBox(0x40000, @ScriptName & ' Help', _\n\t\t\t\t\t\t'Switches are:' & @CRLF _\n\t\t\t\t\t\t & @CRLF & '/extract' _\n\t\t\t\t\t\t & @CRLF & @TAB & 'Extract files to current directory' _\n\t\t\t\t\t\t & @CRLF & '/x|' _\n\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t & @CRLF & @TAB & '')\n\t\t\t\tExit\n\t\t\tCase $CMDLINE[$i] = '/extract'\n\t\t\t\tFileInstall('x', @ScriptDir & '\')\n\t\t\t\tExit\n\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\tCase Else\n\t\t\t\tMsgBox(0x40000, 'Incorrect switch used', _\n\t\t\t\t\t\t'Command used:' & @CRLF & $CMDLINERAW & @CRLF & _\n\t\t\t\t\t\t@CRLF & 'Use /? for the switches available.')\n\t\t\t\tExit\n\t\tEndSelect\n\tNext\nEndIf\n#endregion\n
cmdlineselect2=#region - CmdlineSelect + Properties\nIf $CMDLINE[0] Then\n\tFor $i = 1 To $CMDLINE[0]\n\t\tIf StringLeft($CMDLINE[$i], 1) = '/' Then\n\t\t\tSelect\n\t\t\t\tCase $CMDLINE[$i] = '/?'\n\t\t\t\t\tMsgBox(0x40000, @ScriptName & ' Help', _\n\t\t\t\t\t\t\t'Switches are:' & @CRLF _\n\t\t\t\t\t\t\t & @CRLF & '/extract' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & 'Extract files to current directory' _\n\t\t\t\t\t\t\t & @CRLF & '/x|' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '')\n\t\t\t\t\tExit\n\t\t\t\tCase $CMDLINE[$i] = '/extract'\n\t\t\t\t\tFileInstall('x', @ScriptDir & '\')\n\t\t\t\t\tExit\n\t\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\t\tCase Else\n\t\t\t\t\t_CmdlineMsgBox()\n\t\t\tEndSelect\n\t\tElse\n\t\t\tConst $PROPERTY = StringSplit($CMDLINE[$i], '=')\n\t\t\tIf Not @error Then\n\t\t\t\tSelect\n\t\t\t\t\tCase $PROPERTY[1] = 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase $PROPERTY[1] = 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase $PROPERTY[1] = 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase $PROPERTY[1] = 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase $PROPERTY[1] = 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase Else\n\t\t\t\t\t\t_CmdlineMsgBox()\n\t\t\t\tEndSelect\n\t\t\tElse\n\t\t\t\t_CmdlineMsgBox()\n\t\t\tEndIf\n\t\tEndIf\n\tNext\nEndIf\nFunc _CmdlineMsgBox()\n\tMsgBox(0x40000, 'Incorrect switch used', _\n\t\t\t'Command used:' & @CRLF & $CMDLINERAW & @CRLF & _\n\t\t\t@CRLF & 'Use /? for the switches available.')\n\tExit\nEndFunc\n#endregion\n
cmdlineswitch=#region - CmdlineSwitch\nIf $CMDLINE[0] Then\n\tFor $i = 1 To $CMDLINE[0]\n\t\tSwitch $CMDLINE[$i]\n\t\t\tCase '/?'\n\t\t\t\tMsgBox(0x40000, @ScriptName & ' Help', _\n\t\t\t\t\t\t'Switches are:' & @CRLF _\n\t\t\t\t\t\t & @CRLF & '/extract' _\n\t\t\t\t\t\t & @CRLF & @TAB & 'Extract files to current directory' _\n\t\t\t\t\t\t & @CRLF & '/x|' _\n\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t & @CRLF & @TAB & '')\n\t\t\t\tExit\n\t\t\tCase '/extract'\n\t\t\t\tFileInstall('?', @ScriptDir & '\')\n\t\t\t\tExit\n\t\t\tCase '/x'\n\t\t\tCase '/x'\n\t\t\tCase '/x'\n\t\t\tCase '/x'\n\t\t\tCase Else\n\t\t\t\tMsgBox(0x40000, 'Incorrect switch used', _\n\t\t\t\t\t\t'Command used:' & @CRLF & $CMDLINERAW & @CRLF & _\n\t\t\t\t\t\t@CRLF & 'Use /? for the switches available.')\n\t\t\t\tExit\n\t\tEndSwitch\n\tNext\nEndIf\n#endregion
cmdlineswitch2=#region - CmdlineSwitch + Properties\nIf $CMDLINE[0] Then\n\tFor $i = 1 To $CMDLINE[0]\n\t\tIf StringLeft($CMDLINE[$i], 1) = '/' Then\n\t\t\tSwitch $CMDLINE[$i]\n\t\t\t\tCase '/?'\n\t\t\t\t\tMsgBox(0x40000, @ScriptName & ' Help', _\n\t\t\t\t\t\t\t'Switches are:' & @CRLF _\n\t\t\t\t\t\t\t & @CRLF & '/extract' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & 'Extract files to current directory' _\n\t\t\t\t\t\t\t & @CRLF & '/x|' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '')\n\t\t\t\t\tExit\n\t\t\t\tCase '/extract'\n\t\t\t\t\tFileInstall('x', @ScriptDir & '\')\n\t\t\t\t\tExit\n\t\t\t\tCase '/x'\n\t\t\t\tCase '/x'\n\t\t\t\tCase '/x'\n\t\t\t\tCase '/x'\n\t\t\t\tCase Else\n\t\t\t\t\t_CmdlineMsgBox()\n\t\t\tEndSwitch\n\t\tElse\n\t\t\tConst $PROPERTY = StringSplit($CMDLINE[$i], '=')\n\t\t\tIf Not @error Then\n\t\t\t\tSwitch $PROPERTY[1]\n\t\t\t\t\tCase 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase Else\n\t\t\t\t\t\t_CmdlineMsgBox()\n\t\t\t\tEndSwitch\n\t\t\tElse\n\t\t\t\t_CmdlineMsgBox()\n\t\t\tEndIf\n\t\tEndIf\n\tNext\nEndIf\nFunc _CmdlineMsgBox()\n\tMsgBox(0x40000, 'Incorrect switch used', _\n\t\t\t'Command used:' & @CRLF & $CMDLINERAW & @CRLF & _\n\t\t\t@CRLF & 'Use /? for the switches available.')\n\tExit\nEndFunc\n#endregion\n

#; -- Script switches --
aes=/AutoIt3ExecuteScript |
ael=/AutoIt3ExecuteLine |
raes=Run('"' & @AutoItExe & '" /AutoIt3ExecuteScript "' & | & '"')
rwaes=RunWait('"' & @AutoItExe & '" /AutoIt3ExecuteScript "' & | & '"')
rael=Run('"' & @AutoItExe & '" /AutoIt3ExecuteLine "' & | & '"')
rwael=RunWait('"' & @AutoItExe & '" /AutoIt3ExecuteLine "' & | & '"')

################ 'All Functions' ################

ad=AdlibDisable()|
ae=AdlibEnable(|)
as=Assign(|)
aso=AutoitSetOption(|)
awgt=AutoitWinGetTitle()|
awst=AutoitWinSetTitle(|)
ba=BitAND(|)
bi=BlockInput(|)
bin=Binary(|)
binl=BinaryLen(|)
binm=BinaryMid(|)
bn=BitNOT(|)
bo=BitOR(|)
bro=BitRotate(|)
bre=Break(|)
bs=BitShift(|)
bx=BitXOR(|)
ccl=ControlClick(|)
cco=ControlCommand(|)
cd=ControlDisable(|)
cdt=CDTray(|)
ce=ControlEnable(|)
ceil=Ceiling(|)
cf=ControlFocus(|)
cg=ClipGet()|
cgf=ControlGetFocus(|)
cgh=ControlGetHandle(|)
cgp=ControlGetPos(|)
cgt=ControlGetText(|)
ch=ControlHide(|)
clv=ControlListView(|)
cm=ControlMove(|)
cp=ClipPut(|)
cr=ConsoleRead(|)
cs=ControlSend(|)
csh=ControlShow(|)
cst=ControlSetText(|)
cw=ConsoleWrite(| & @CRLF)
cwe=ConsoleWriteError(| & @CRLF)
dco=DirCopy(|)
dcr=DirCreate(|)
dgd=DriveGetDrive(|)
dgfs=DriveGetFileSystem(|)
dgl=DriveGetLabel(|)
dgsi=DirGetSize(|)
dgse=DriveGetSerial(|)
dgt=DriveGetType(|)
dll=DllCall(|)
dllc=DllClose(|)
dllo=DllOpen(|)
dllsc=DllStructCreate(|)
dllsgd=DllStructGetData(|)
dllsgp=DllStructGetPtr(|)
dllsgs=DllStructGetSize(|)
dllssd=DllStructSetData(|)
dm=DirMove(|)
dma=DriveMapAdd(|)
dmd=DriveMapDel(|)
dmg=DriveMapGet(|)
dr=DirRemove(|)
ds=DriveStatus(|)
dsf=DriveSpaceFree(|)
dsl=DriveSetLabel(|)
dst=DriveSpaceTotal(|)
eg=EnvGet(|)
es=EnvSet(|)
eu=EnvUpdate()|
exec=Execute(|)
fcd=FileChangeDir(|)
fcl=FileClose(|)
fcnl=FileCreateNTFSLink(|)
fco=FileCopy(|)
fcs=FileCreateShortcut(|)
fd=FileDelete(|)
fe=FileExists(|)
ffff=FileFindFirstFile(|)
ffnf=FileFindNextFile(|)
fga=FileGetAttrib(|)
fgln=FileGetLongName(|)
fgsh=FileGetShortcut(|)
fgsi=FileGetSize(|)
fgsn=FileGetShortName(|)
fgt=FileGetTime(|)
fgv=FileGetVersion(|)
fi=FileInstall(|)
flo=Floor(|)
fm=FileMove(|)
fo=FileOpen(|)
fod=FileOpenDialog(|)
fr=FileRead(|)
frc=FileRecycle(|)
frce=FileRecycleEmpty(|)
frl=FileReadLine(|)
fsa=FileSetAttrib(|)
fsd=FileSaveDialog(|)
fsf=FileSelectFolder(|)
fsp=FtpSetProxy(|)
fst=FileSetTime(|)
fw=FileWrite(|)
fwl=FileWriteLine(|)
gc=GUICreate(|)
gcca=GUICtrlCreateAvi(|)
gccb=GUICtrlCreateButton(|)
gcccb=GUICtrlCreateCheckbox(|)
gcccm=GUICtrlCreateContextMenu(|)
gccda=GUICtrlCreateDate(|)
gccdu=GUICtrlCreateDummy()|
gcce=GUICtrlCreateEdit(|)
gccg=GUICtrlCreateGroup(|)
gccgc=GUICtrlCreateGroup('', -99, -99, 1, 1) ; Close group.\n|
gccgr=GUICtrlCreateGraphic(|)
gcci=GUICtrlCreateInput(|)
gccico=GUICtrlCreateIcon(|)
gccla=GUICtrlCreateLabel(|)
gccli=GUICtrlCreateList(|)
gccm=GUICtrlCreateMenu(|)
gccmc=GUICtrlCreateMonthCal(|)
gccmi=GUICtrlCreateMenuItem(|)
gccco=GUICtrlCreateCombo(|)
gcco=GUICtrlCreateObj(|)
gccpi=GUICtrlCreatePic(|)
gccpr=GUICtrlCreateProgress(|)
gccr=GUICtrlCreateRadio(|)
gccs=GUICtrlCreateSlider(|)
gcct=GUICtrlCreateTab(|)
gccti=GUICtrlCreateTabItem(|)
gcctic=GUICtrlCreateTabItem('') ; Close tabitem.\n|
gcctv=GUICtrlCreateTreeView(|)
gcctvi=GUICtrlCreateTreeViewItem(|)
gccu=GUICtrlCreateUpdown(|)
gcd=GUICtrlDelete(|)
gcgh=GUICtrlGetHandle(|)
gcgs=GUICtrlGetState(|)
gcr=GUICtrlRead(|)
gcrlvs=GUICtrlRegisterListViewSort(|)
gcrm=GUICtrlRecvMsg(|)
gcsbc=GUICtrlSetBkColor(|)
gcsco=GUICtrlSetColor(|)
gcscu=GUICtrlSetCursor(|)
gcsd=GUICtrlSetData(|)
gcsf=GUICtrlSetFont(|)
gcsgr=GUICtrlSetGraphic(|)
gcsi=GUICtrlSetImage(|)
gcsl=GUICtrlSetLimit(|)
gcsm=GUICtrlSendMsg(|)
gcsoe=GUICtrlSetOnEvent(|)
gcsp=GUICtrlSetPos(|)
gcsr=GUICtrlSetResizing(|)
gcss=GUICtrlSetState(|)
gcsst=GUICtrlSetStyle(|)
gcst=GUICtrlSetTip(|)
gcstd=GUICtrlSendToDummy(|)
gd=GUIDelete(|)
ggci=GUIGetCursorInfo(|)
ggm=GUIGetMsg(|)
grm=GUIRegisterMsg(|)
gs=GUISwitch(|)
gsa=GUISetAccelerators(|)
gsbc=GUISetBkColor(|)
gsc=GUISetCoord(|)
gscu=GUISetCursor(|)
gsf=GUISetFont(|)
gsg=GUIStartgroup(|)
gsh=GUISetHelp(|)
gsi=GUISetIcon(|)
gsoe=GUISetOnEvent(|)
gss=GUISetState(|)
gsw=GUISwitch(|)
hks=HotKeySet(|)
hsp=httpSetProxy(|)
ib=InputBox(|)
id=IniDelete(|)
ig=InetGet(|)
igs=InetGetSize(|)
ir=IniRead(|)
irs=IniReadSection(|)
irsn=IniReadSectionNames(|)
isad=IsAdmin()|
isar=IsArray(|)
isbin=IsBinary(|)
isbo=IsBool(|)
isd=IsDeclared(|)
isf=IsFloat(|)
ishw=IsHWnd(|)
isi=IsInt(|)
isk=IsKeyword(|)
isn=IsNumber(|)
iso=IsObj(|)
iss=IsString(|)
iw=IniWrite(|)
iws=IniWriteSection(|)
mb=MsgBox(|)
mc=MouseClick(|)
mcd=MouseClickDrag(|)
md=MouseDown(|)
mgc=MouseGetCursor()|
mgp=MouseGetPos()|
mgs=MemGetStats()|
mm=MouseMove(|)
mu=MouseUp(|)
mw=MouseWheel(|)
num=Number(|)
oae=OnAutoItExit()|
oas=OnAutoItStart()|
ocr=ObjCreate(|)
oev=ObjEvent(|)
oge=ObjGet(|)
pc=ProcessClose(|)
pcs=PixelChecksum(|)
pe=ProcessExists(|)
pgc=PixelGetColor(|)
pic=PluginClose(|)
pio=PluginOpen(|)
pl=ProcessList(|)
poff=ProgressOff()|
pon=ProgressOn(|)
ps=PixelSearch(|)
pset=ProgressSet(|)
psp=ProcessSetPriority(|)
pw=ProcessWait(|)
pwc=ProcessWaitClose(|)
ra=RunAs(|)
raw=RunAsWait(|)
rd=RegDelete(|)
rdm=Random(|)
rek=RegEnumKey(|)
rev=RegEnumVal(|)
rnd=Round(|)
rr=RegRead(|)
rwa=RunWait(|)
rwr=RegWrite(|)
sacr=StringAddCR(|)
sbgt=StatusbarGetText(|)
sco=StringCompare(|)
sd=Shutdown(|)
se=SetError(|)
ser=StdErrRead(|)
sex=SetExtended(|)
sexec=ShellExecute(|)
sexecw=ShellExecuteWait(|)
sf=StringFormat(|)
sia=StringIsAlpha(|)
sian=StringIsAlNum(|)
siascii=StringIsASCII(|)
sid=StringIsDigit(|)
sif=StringIsFloat(|)
sii=StringIsInt(|)
sil=StringIsLower(|)
sio=SplashImageOn(|)
sioc=StdioClose(|)
sis=StringInStr(|)
sisp=StringIsSpace(|)
siu=StringIsUpper(|)
siw=StdinWrite(|)
sixd=StringIsXDigit(|)
ska=SendKeepActive(|)
sl=StringLeft(|)
slen=StringLen(|)
slower=StringLower(|)
slp=Sleep(|)
sm=StringMid(|)
so=SplashOff()|
sor=StdoutRead(|)
sp=SoundPlay(|)
sr=StringRight(|)
srep=StringReplace(|)
srex=StringRegExp(|)
srexr=StringRegExpReplace(|)
ss=StringSplit(|)
sscr=StringStripCR(|)
ssws=StringStripWS(|)
sswv=SoundSetWaveVolume(|)
stbin=StringToBinary(|)
stl=StringTrimLeft(|)
sto=SplashTextOn(|)
str=StringTrimRight(|)
stri=String(|)
supper=StringUpper(|)
tci=TrayCreateItem(|)
tcm=TrayCreateMenu(|)
tcpa=TCPAccept(|)
tcpc=TCPConnect(|)
tcpcs=TCPCloseSocket(|)
tcpl=TCPListen(|)
tcpntip=TCPNameToIP(|)
tcpr=TCPRecv(|)
tcps=TCPSend(|)
tcpsd=TCPShutdown()|
tcpsu=TCPStartup()|
td=TimerDiff(|)
tgm=TrayGetMsg()|
ti=TimerInit()|
tid=TrayItemDelete(|)
tigh=TrayItemGetHandle(|)
tigs=TrayItemGetState(|)
tigt=TrayItemGetText(|)
tisoe=TrayItemSetOnEvent(|)
tiss=TrayItemSetState(|)
tist=TrayItemSetText(|)
toolt=ToolTip(|)
tsc=TraySetClick(|)
tsi=TraySetIcon(|)
tsoe=TraySetOnEvent(|)
tspi=TraySetPauseIcon(|)
tss=TraySetState(|)
tstt=TraySetToolTip(|)
tt=TrayTip(|)
ub=UBound(|)
udpb=UDPBind(|)
udpcs=UDPCloseSocket(|)
udpo=UDPOpen(|)
udpr=UDPRecv(|)
udpsd=UDPShutdown()|
udpsu=UDPStartup()|
wa=WinActive(|)
wat=WinActivate(|)
wc=WinClose(|)
we=WinExists(|)
wf=WinFlash(|)
wgcl=WinGetClassList(|)
wgcp=WinGetCaretPos()|
wgcs=WinGetClientSize(|)
wgh=WinGetHandle(|)
wgpo=WinGetPos(|)
wgpr=WinGetProcess(|)
wgs=WinGetState(|)
wgte=WinGetText(|)
wgti=WinGetTitle(|)
wk=WinKill(|)
wl=WinList(|)
wm=WinMove(|)
wma=WinMinimizeAll()|
wmau=WinMinimizeAllUndo()|
wmsi=WinMenuSelectItem(|)
wsot=WinSetOnTop(|)
wss=WinSetState(|)
wst=WinSetTitle(|)
wstr=WinSetTrans(|)
ww=WinWait(|)
wwa=WinWaitActive(|)
wwc=WinWaitClose(|)
wwna=WinWaitNotActive(|)
